Install Docker on AWS EC2
==============================
#yum install -y docker
#service docker start
#chkconfig docker on
#usermod -aG docker ec2-user
=============================
docker version
=============================
FROM ubuntu:latest
RUN apt-get update && apt-get install -y telnet
CMD ["telnet"]
===================
#Create a Nginx Container
FROM ubuntu 
MAINTAINER demousr@gmail.com 
RUN apt-get update \
    && apt-get install -y nginx \
    && apt-get clean \
=============
# Use the Amazon Linux base image
FROM amazonlinux:2

# Update the system and install necessary packages
RUN yum update -y && \
    yum install -y git tar wget && \
    amazon-linux-extras install java-openjdk11 -y && \
    yum clean all

# Set up Maven
RUN cd /opt && \
    wget https://dlcdn.apache.org/maven/maven-3/3.9.4/binaries/apache-maven-3.9.4-bin.tar.gz && \
    tar xvf apache-maven-3.9.4-bin.tar.gz && \
    rm apache-maven-3.9.4-bin.tar.gz && \
    echo "export M2_HOME=/opt/apache-maven-3.9.4" >> /root/.bash_profile && \
    echo "export M2=\$M2_HOME/bin" >> /root/.bash_profile && \
    echo "export PATH=\$M2:\$PATH" >> /root/.bash_profile

# Source the .bash_profile to load the environment variables
RUN source /root/.bash_profile
========================
# Use the Amazon Linux base image
FROM amazonlinux:2

# Update the system and install necessary packages
RUN yum update -y && \
    yum install -y git tar wget && \
    yum install  -y java-17-amazon-corretto*  && \
    yum clean all

# Set up Maven
RUN cd /opt && \
    wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz && \
    tar xvf apache-maven-3.9.9-bin.tar.gz && \
    rm apache-maven-3.9.9-bin.tar.gz && \
    echo "export M2_HOME=/opt/apache-maven-3.9.9" >> /root/.bash_profile && \
    echo "export M2=\$M2_HOME/bin" >> /root/.bash_profile && \
    echo "export PATH=\$M2:\$PATH" >> /root/.bash_profile

# Source the .bash_profile to load the environment variables
RUN source /root/.bash_profile

============
# Use the Amazon Linux base image
FROM amazonlinux:2

# Update the system and install necessary packages
RUN yum update -y && \
    yum install -y git tar wget unzip python3 python3-pip && \
    amazon-linux-extras install java-openjdk11 -y && \
    yum clean all

# Set up Maven
RUN cd /opt && \
    wget https://dlcdn.apache.org/maven/maven-3/3.9.4/binaries/apache-maven-3.9.4-bin.tar.gz && \
    tar xvf apache-maven-3.9.4-bin.tar.gz && \
    rm apache-maven-3.9.4-bin.tar.gz && \
    echo "export M2_HOME=/opt/apache-maven-3.9.4" >> /root/.bashrc && \
    echo "export M2=\$M2_HOME/bin" >> /root/.bashrc && \
    echo "export PATH=\$M2:\$PATH" >> /root/.bashrc

# Install Terraform
RUN cd /opt && \
    wget https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip && \
    unzip terraform_1.0.7_linux_amd64.zip && \
    rm terraform_1.0.7_linux_amd64.zip && \
    mv terraform /usr/local/bin/

# Install kubectl
RUN cd /usr/local/bin && \
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    chmod +x kubectl


# Set environment variables for the current shell session
ENV M2_HOME=/opt/apache-maven-3.9.4
ENV M2=$M2_HOME/bin
ENV PATH=$M2:/usr/local/bin:$PATH
==========


####Particcal 2#####
1. Add dockerfile in Fusion-ms Microservice 
===
FROM tomcat:9.0.52-jre11-openjdk-slim

# Install Java 17
RUN apt-get update && \
    apt-get install -y openjdk-17-jdk && \
    apt-get clean;

# Set Java 17 as the default Java version
RUN update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java && \
    update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac

# Copy the JAR file into the Tomcat webapps directory
COPY ./target/fusion-ms*.jar /usr/local/tomcat/webapps

# Expose port 8080
EXPOSE 8080

# Set the user
USER fusion

# Set the working directory
WORKDIR /usr/local/tomcat/webapps

# Start Tomcat
CMD ["catalina.sh", "run"]
===
2, Update the Jenkinsfile with new stage
        stage('Building & Tag Docker Image') {
            steps {
                echo "Starting Building Docker Image"
                sh "docker build -t fusion-ms ."
                echo 'Docker Image Build Completed'
            }
        }
3. Start the Jenkins Master & install docker.
yum install -y docker
service docker start
chkconfig docker on
usermod -aG docker ec2-user
chmod 777 /var/run/docker.sock

4. add the changes in local repo and push the changes to dev branch
5. run the jenkins jobs

